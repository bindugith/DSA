Remove Duplicates from a Sorted Linked List
Difficulty: EasyAccuracy: 49.37%Submissions: 290K+Points: 2
Given a singly linked list. The task is to remove duplicates (nodes with duplicate values) from the given list (if it exists).
Note: Try not to use extra space. The nodes are arranged in a sorted way.

Examples:

Input:
LinkedList: 2->2->4->5
Output: 2 -> 4 -> 5

Explanation: In the given linked list 2 -> 2 -> 4 -> 5, only 2 occurs more than 1 time. So we need to remove it once.
Input:
LinkedList: 2->2->2->2->2
Output: 2

Explanation: In the given linked list  2 -> 2 -> 2 -> 2, 2 is the only element and is repeated 5 times. So we need to remove any four 2.
class Solution {
    // Function to remove duplicates from sorted linked list.
    Node removeDuplicates(Node head) {
        // Your code here
        Node temp=head;
        Node temp1=head.next;
        while(temp1!=null){
            if(temp.data==temp1.data){
                Node front=temp1;
                temp.next=temp.next.next;
                temp1=temp1.next;
                front.next=null;
            }else{
                temp=temp.next;
                temp1=temp1.next;
            }
        }
        return head;
    }
}                                                                                                                
