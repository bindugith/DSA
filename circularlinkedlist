import java.util.*;
class Node{
int data;
Node next;
Node(int x){
data=x;
next=null;
}
}
class circularlist{
Node head;
circularlist(){
head=null;
}
void create(int x){
Node n=new Node(x);
if(head==null){
head=n;
n.next=head;
}else{
Node temp=head;
while(temp.next!=head){
temp=temp.next;
}
n.next=head;
temp.next=n;
}
}
void display(){
if(head==null){
System.out.println("List is empty");
}
Node temp=head;
while(temp.next!=head){
System.out.println(temp.data+" ");
temp=temp.next;
}
System.out.println(temp.data+" ");
}

void insertAtFirst(int x){
Node n=new Node(x);
if(head==null){
head=n;
n.next=head;
}else{
Node temp=head;
while(temp.next!=head){
temp=temp.next;
}
temp.next=n;
n.next=head;
head=n;
}
}
void insertAtAnyPosition(int pos,int x){
Node n=new Node(x);
if(x==1){
insertAtFirst(x);
return;
}
if(head==null){
head=n;
n.next=head;
}
else{
Node temp=head;
int count=2;
while(temp.next!=head && count<pos){
temp=temp.next;
count=count+1;
}
if(temp.next==head){
n.next=head;
temp.next=n;
}else{
n.next=temp.next;
temp.next=n;
}
}
}
void deleteAtFirst(){
if(head==null){
System.out.println("List is empty");
}else{
Node temp=head;
while(temp.next!=head){
temp=temp.next;
}
System.out.println(head.data);
head=head.next;
temp.next=head;
}
}
void deleteAtLast(){
if(head==null){
System.out.println("List is empty");
}
Node temp=head;
if(head.next==head){
System.out.println(head.data+" ");
head=null;
}
while(temp.next.next!=head){
temp=temp.next;
}
System.out.println(temp.next.data+" ");
temp.next.next=null;
temp.next=head;
}
void deleteAtAnyPosition(int pos){
    if(head==null){
        System.out.println("List is empty");
    }
    Node temp=head;
    if(head.next==head){
        System.out.println(head.data+" ");
        head=null;
    }else{
        int count=2;
        while(count<pos && temp.next.next!=head){
            count++;
            temp=temp.next;
        }
        if(temp.next.next==head){
            Node temp1=temp.next;
            temp.next=head;
            temp1=null;
        }else{
            Node temp1=temp.next;
            temp.next=temp.next.next;
            temp1=null;
        }
    }
}
}
class CircularLinkedList1{
public static void main(String[] args){
Scanner s=new Scanner(System.in);
circularlist obj=new circularlist();
for(;;){
System.out.println("1.create\n 2.display \n 3.insertAtFirst \n 4.insertAtAnyPosition \n 5.deleteAtFirst \n 6.deleteAtLast \n 7.deleteAtAnyPosition");
System.out.println("Enter a choice");
int ch=s.nextInt();
if(ch==1){
System.out.println("Enter a val");
int val=s.nextInt();
obj.create(val);
}
else if(ch==2){
obj.display();
}
else if(ch==3){
System.out.println("Enter a val");
int val=s.nextInt();
obj.insertAtFirst(val);
}
else if(ch==4){
System.out.println("Enter a pos");
int pos=s.nextInt();
System.out.println("Enter a val");
int val=s.nextInt();
obj.insertAtAnyPosition(pos,val);
}
else if(ch==5){
obj.deleteAtFirst();
}
else if(ch==6){
obj.deleteAtLast();
}
else if(ch==7){
    System.out.println("Enter a position");
    int x=s.nextInt();
    obj.deleteAtAnyPosition(x);
}
}
}
}

